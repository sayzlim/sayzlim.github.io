/*
  Made by Elly Loel - https://ellyloel.com/
  With inspiration from:
    - Josh W Comeau - https://courses.joshwcomeau.com/css-for-js/treasure-trove/010-global-styles/
    - Andy Bell - https://piccalil.li/blog/a-modern-css-reset/
    - Adam Argyle - https://unpkg.com/open-props@1.3.16/normalize.min.css / https://codepen.io/argyleink/pen/KKvRORE
  Notes:
    - `:where()` is used to lower specificity for easy overriding.
*/

* {
  /* Remove default margin on everything */
  margin: 0;
  /* Remove default padding on everything */
  padding: 0;
}

/* Use a more-intuitive box-sizing model on everything */

*,
::before,
::after {
  box-sizing: border-box;
}

/* Remove border and set sensible defaults for backgrounds, on all elements except fieldset progress and meter */

*:where(:not(fieldset, progress, meter)) {
  border-width: 0;
  border-style: solid;
  background-origin: border-box;
  background-repeat: no-repeat;
}

html {
  /* Allow percentage-based heights in the application */
  block-size: 100%;
  /* Making sure text size is only controlled by font-size */
  -webkit-text-size-adjust: none;
}

/* Smooth scrolling for users that don't prefer reduced motion */

@media (prefers-reduced-motion: no-preference) {
  html:focus-within {
    scroll-behavior: smooth;
  }
}

body {
  /* Improve text rendering */
  -webkit-font-smoothing: antialiased;
  /* https://marco.org/2012/11/15/text-rendering-optimize-legibility */
  text-rendering: optimizeSpeed;
  /* Allow percentage-based heights in the application */
  min-block-size: 100%;
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter#example_2 */
  /* scrollbar-gutter: stable both-edges; Removed until this bug is fixed: https://bugs.chromium.org/p/chromium/issues/detail?id=1318404#c2 */
}

/* Improve media defaults */

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}

/* Remove stroke and set fill colour to the inherited font colour */

:where(svg) {
  stroke: none;
  fill: currentColor;
}

/* SVG's without a fill attribute */

:where(svg):where(:not([fill])) {
  /* Remove fill and set stroke colour to the inherited font colour */
  stroke: currentColor;
  fill: none;
  /* Rounded stroke */
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* Set a size for SVG's without a width attribute */

:where(svg):where(:not([width])) {
  inline-size: 5rem;
}

/* Remove built-in form typography styles */

:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  color: inherit;
  font: inherit;
  font-size: inherit;
  letter-spacing: inherit;
}

/* Change textarea resize to vertical only and block only if the browser supports that */

:where(textarea) {
  resize: vertical;
}

@supports (resize: block) {
  :where(textarea) {
    resize: block;
  }
}

/* Avoid text overflows */

:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

/* Fix h1 font size inside article, aside, nav, and section */

h1 {
  font-size: 2em;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */

:where(ul, ol)[role="list"] {
  list-style: none;
}

/* More readable underline style for anchor tags without a class. This could be set on anchor tags globally, but it can cause conflicts. */

a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Make it clear that interactive elements are interactive */

:where(a[href], area, button, input, label[for], select, summary, textarea, [tabindex]:not([tabindex*="-"])) {
  cursor: pointer;
  touch-action: manipulation;
}

:where(input[type="file"]) {
  cursor: auto;
}

:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  cursor: pointer;
}

/* Animate focus outline */

@media (prefers-reduced-motion: no-preference) {
  :focus-visible {
    transition: outline-offset 145ms cubic-bezier(0.25, 0, 0.4, 1);
  }
  :where(:not(:active)):focus-visible {
    transition-duration: 0.25s;
  }
}

:where(:not(:active)):focus-visible {
  outline-offset: 5px;
}

/* Make sure users can't select button text */

:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"]),
:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
          user-select: none;
  text-align: center;
}

/* Disabled cursor for disabled buttons */

:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"])[disabled] {
  cursor: not-allowed;
}

/* Global */

:root {
	--major-color-light: #ffffff;
	--major-color-dark: #121420;
	--minor-color: hsl(244, 17%, 20%);
	--accent-color: 205, 100%, 51%;
	--link-color: #0496ff;
	--text-color: #121420;

	--title-font: 'Familjen Grotesk', sans-serif;
	--body-font: Inter, sans-serif;

	/* Major Third Scale */
	--s-1: 0.8rem;
	--s0: 1rem;
	--s1: 1.25rem;
	--s2: 1.563rem;
	--s3: 1.953rem;
	--s4: 2.441rem;
	--s5: 3.052rem;
	--s6: 3.814rem;

	/* Line Heights */
	--lh-1: calc(1.1em + 0.25ex);
	--lh0: calc(1.35em + .5ex);
	--lh1: calc(1.6em + 0.75ex);
}

.s-1 {
	font-size: var(--s-1);
}

.s0 {
	font-size: var(--s0);
}

.s1 {
	font-size: var(--s1);
}

.s2 {
	font-size: var(--s2);
}

.s3 {
	font-size: var(--s3);
}

.s4 {
	font-size: var(--s4);
}

.s5 {
	font-size: var(--s5);
}

.s6 {
	font-size: var(--s6);
}

button,
.button {
	padding: 0.5em 1em;
	background-color: hsla(var(--accent-color), 0.8);
	-webkit-backdrop-filter: blur(5px);
	        backdrop-filter: blur(5px);
	color: var(--major-color-light);
	text-decoration: none;
	border-radius: 8px;
	font-weight: 500;
	line-height: 1;
	transition: background-color 0.2s ease-in-out;
}

button:hover,
.button:hover {
	background-color: hsla(var(--accent-color), 1);
}

.deck {
	display: flex;
	gap: 2em;
	flex-wrap: wrap;
	place-content: center;
}

.deck > * {
	flex-grow: 1;
}

.card {
	background-color: #F5F9FF;
	padding: 2em;
	border-radius: 8px;
	flex-basis: 40ch;
	font-size: var(--s1);
}

.cardCallToAction {
	margin-block: 15rem;
	margin-inline: auto;
	max-inline-size: 36ch;
	font-size: var(--s5);
	line-height: var(--lh-1);
}

#about {
	max-inline-size: 60ch;
	-webkit-margin-before: 10rem;
	        margin-block-start: 10rem;
	font-size: var(--s1);
	line-height: var(--lh0);
}

#socialNav a {
	display: flex;
	gap: 1ch;
}

#socialNav svg {
	stroke: currentColor;
	fill: none;
}

html {
	font-size: clamp(.8rem, calc(1vw + .2rem), 1.2rem);

	background-color: var(--major-color-light);
}

body {
	font-family: var(--body-font);
	color: var(--text-color);
	line-height: var(--lh0);
	position: relative;
}

a {
	color: var(--link-color);
}

/* Typograhy */

.flow > * + * {
	margin-top: var(--gap, calc(1em + .5ex));
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: var(--title-font);
	line-height: var(--lh-1);
}

small {
	font-size: 0.875em;
}

/* Layout */

.center {
	margin-inline: auto;
}

.container {
	padding: 0 2rem;
	box-sizing: border-box;
	max-width: 90rem;
}

.headline {
	max-inline-size: 70ch;
	padding: 4em 0;
	height: 70vh;
	place-content: center;
}

.byline {
	font-weight: 500;
	font-size: var(--s3);
	line-height: var(--lh-1);
}

.headline h1 {
	font-weight: 700;
	font-size: var(--s6);
	line-height: var(--lh-1);
	position: relative;
	transform: translateX(-0.2ch);
}

h2 {
	font-size: var(--s4);
}

main {
	margin-block: 5rem;
}

.cta {
	margin-top: 1.5em;
}

.faq-container {
	padding-top: 5em;
	padding-bottom: 5em;
}

.faq-container h2 {
	text-align: center;
}

.question-container {
	margin-top: 4em;
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 3em;
}

footer.container {
	padding-block: 6em;
	font-weight: 500;
}

/* Components */

.macro-pitch {
	font-size: 1.5em;
}

.macro-pitch > * + * {
	margin-top: 2ex;
}

.macro-pitch h2 {
	font-size: 2.3em;
}

.shade {
	position: relative;
	padding: 4em 0 8em;
}

.shade:nth-child(2n) {
	background-color: var(--major-color-dark);
	color: var(--major-color-light);
}

.shade video,
.shade img {
	border-radius: 8px;
}

.shade:nth-child(2n) video,
.shade:nth-child(2n) img {
	box-shadow:
		0 0 1px 1px hsla(0, 0%, 100%, 0.05),
		0 0 2px 1px hsla(0, 0%, 100%, 0.15);
}

.neon {
	color: hsl(var(--accent-color));
	font-weight: 600;
}

.macro-collection {
	list-style-type: none;
	display: flex;
	flex-wrap: wrap;
	margin-top: 2em;
}

.macro-collection > *:not(:last-child) {
	margin-right: 1.5ex;
}

.macro-collection li {
	margin-bottom: 1.5ex;
	font-weight: 500;
	text-shadow: 0 1px hsla(0, 0%, 100%, 0.8);
	background-color: hsla(0, 0%, 93%, 0.3);
	padding: 1ex 1.5ch;
	border-radius: 8px;
	box-shadow:
		0 0 1px 1px hsla(0, 0%, 0%, 0.1),
		0 0 2px 1px hsla(0, 0%, 0%, 0.1);
}

.contact {
	display: flex;
	flex-direction: row;
	gap: 3ch;
	place-content: center;
}

.\-listless {
	list-style-type: none;
}

@media only screen and (max-width: 759px) {
	.question-container {
		grid-template-columns: 1fr;
	}
}